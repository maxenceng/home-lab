version: '3'

vars:
  KUBESEAL_VERSION: 0.26.0

dotenv:
  - .env

tasks:
  set-env:
    cmds:
      - sed -i "s/TS_ID/{{.TS_ID}}/g" operator.yaml
      - sed -i "s/TS_SECRET/{{.TS_SECRET}}/g" operator.yaml
      - sed -i "s/TS_ID/{{.TS_ID}}/g" values.yaml
      - sed -i "s/TS_SECRET/{{.TS_SECRET}}/g" values.yaml
    dir: setup/tailscale

  configure-helm:
    cmds:
      - helm repo add stable https://charts.helm.sh/stable
      - helm repo add tailscale https://pkgs.tailscale.com/helmcharts
      - helm repo add strrl.dev https://helm.strrl.dev
      - helm repo update

  install-tailscale:
    cmds:
      - helm upgrade --install tailscale-operator tailscale/tailscale-operator
        -n tailscale --create-namespace
        -f values.yaml
        --wait
      - kubectl apply -f operator.yaml
    dir: setup/tailscale

  install-cloudflare:
    cmd: helm upgrade --install --wait
      -n cloudflare-tunnel-ingress-controller --create-namespace
      cloudflare-tunnel-ingress-controller
      strrl.dev/cloudflare-tunnel-ingress-controller
      --set=cloudflare.apiToken="{{.CF_TOKEN}}",cloudflare.accountId="{{.CF_ID}}",cloudflare.tunnelName="homelab"

  install-kubeseal:
    cmds:
      - wget "https://github.com/bitnami-labs/sealed-secrets/releases/download/v${KUBESEAL_VERSION:?}/kubeseal-${KUBESEAL_VERSION:?}-linux-amd64.tar.gz"
      - tar -xvzf kubeseal-${KUBESEAL_VERSION:?}-linux-amd64.tar.gz kubeseal
      - sudo install -m 755 kubeseal /usr/local/bin/kubeseal

  install-nvidia:
    cmd: kubectl apply -f plugin.yaml
    dir: setup/nvidia

  install-argocd:
    cmds:
      - kubectl create namespace argocd
      - kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
      - kubectl patch svc argocd-server -n argocd --patch-file lb.yaml
    dir: setup/argocd

  argocd-password:
    cmd: argocd admin initial-password -n argocd

  argocd-login:
    cmd: argocd login argocd-argocd-server.{{.MAGIC_DNS}}

  setup:
    cmds:
      - task set-env
      - task configure-helm
      - task install-tailscale
      - task install-kubeseal
      - task install-argocd
      - task argocd-password
      - task argocd-login

  install-dashboard:
    cmd: argocd app create dashboard -f app.yaml
    dir: setup/dashboard

  dashboard-password:
    cmd: kubectl -n kubernetes-dashboard get secret admin-user-secret -o jsonpath="{.data.token}" | base64 -d

  install-sealed-secrets:
    cmd: argocd app create sealed-secrets -f app.yaml
    dir: setup/sealed

  set-config:
    cmd: argocd app create config -f app.yaml
    dir: setup/config

  set-secrets:
    cmds:
      - kubeseal --controller-name=sealed-secrets --controller-namespace=kube-system -f sample/gluetun-secret.yaml -w config/gluetun-sealed.yaml
      - kubeseal --controller-name=sealed-secrets --controller-namespace=kube-system -f sample/postgres-secret.yaml -w config/postgres-sealed.yaml
      - kubeseal --controller-name=sealed-secrets --controller-namespace=kube-system -f sample/paperless-secret.yaml -w config/paperless-sealed.yaml
      - kubeseal --controller-name=sealed-secrets --controller-namespace=kube-system -f sample/mariadb-secret.yaml -w config/mariadb-sealed.yaml

  install-postgres:
    cmd: argocd app create postgres -f app.yaml
    dir: setup/postgres

  install-mariadb:
    cmd: argocd app create mariadb -f app.yaml
    dir: setup/mariadb

  install-redis:
    cmd: argocd app create redis -f app.yaml
    dir: setup/redis

  prepare:
    cmds:
      - task install-dashboard
      - task install-sealed-secrets
      - task set-config
      - kubectl config set-context --current --namespace=dev
      - task install-postgres
      - task install-redis

  create-apps:
    cmd: argocd app create home-lab
      --dest-namespace argocd
      --dest-server https://kubernetes.default.svc
      --repo https://github.com/maxenceng/home-lab.git
      --path apps

  sync:
    cmd: argocd app sync home-lab
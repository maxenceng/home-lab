kind: Deployment
apiVersion: apps/v1
metadata:
  name: rancher
  annotations:
{{- if (lt (int .Values.replicas) 0) }}
    management.cattle.io/scale-available: "{{ sub 0 (int .Values.replicas)}}"
{{- end  }}
  labels:
{{ include "rancher.labels" . | indent 4 }}
spec:
{{- if (gt (int .Values.replicas) 0) }}
  replicas: {{ .Values.replicas }}
{{- end  }}
  selector:
    matchLabels:
      app: rancher
  strategy:
    rollingUpdate:
      maxSurge: 1
{{- if (eq (int .Values.replicas) 1) }}
      maxUnavailable: 0
{{- else }}
      maxUnavailable: 1
{{- end }}
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: rancher
        release: {{ .Release.Name }}
    spec:
      priorityClassName: {{ .Values.priorityClassName }}
      serviceAccountName: rancher
{{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 6 }}
{{- end }}
      affinity:
        podAntiAffinity:
{{- if eq .Values.antiAffinity "required" }}
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - rancher
            topologyKey: {{ .Values.topologyKey | default "kubernetes.io/hostname" }}
{{- else }}
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - rancher
              topologyKey: {{ .Values.topologyKey | default "kubernetes.io/hostname" }}
{{- end }}
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms: {{ include "linux-node-selector-terms" . | nindent 14 }}
      tolerations: {{ include "linux-node-tolerations" . | nindent 8 }}
      containers:
      - image: {{ .Values.rancherImage }}:{{ default .Chart.AppVersion .Values.rancherImageTag }}
        imagePullPolicy: {{ default "IfNotPresent" .Values.rancherImagePullPolicy }}
        name: {{ template "rancher.name" . }}
        ports:
        - containerPort: 80
          protocol: TCP
{{- if (and .Values.hostPort (gt (int .Values.hostPort) 0)) }}
        - containerPort: 444
          hostPort: {{ int .Values.hostPort }}
          protocol: TCP
{{- end}}
        args:
{{- if .Values.debug }}
        - "--debug"
{{- end }}
        - "--http-listen-port=80"
        - "--https-listen-port=443"
        - "--add-local={{ .Values.addLocal }}"
        env:
        - name: CATTLE_NAMESPACE
          value: {{ .Release.Namespace }}
        - name: CATTLE_PEER_SERVICE
          value: rancher
{{- if .Values.features }}
        - name: CATTLE_FEATURES
          value: "{{ .Values.features }}"
{{- end}}
{{- if .Values.noDefaultAdmin }}
        - name: CATTLE_NO_DEFAULT_ADMIN
          value: "{{ .Values.noDefaultAdmin }}"
{{- end}}
{{- if gt (int .Values.auditLog.level) 0 }}
        - name: AUDIT_LEVEL
          value: {{ .Values.auditLog.level | quote }}
        - name: AUDIT_LOG_MAXAGE
          value: {{ .Values.auditLog.maxAge | quote }}
        - name: AUDIT_LOG_MAXBACKUP
          value: {{ .Values.auditLog.maxBackup | quote }}
        - name: AUDIT_LOG_MAXSIZE
          value: {{ .Values.auditLog.maxSize | quote }}
{{- end }}
{{- if .Values.proxy }}
        - name: HTTP_PROXY
          value: {{ .Values.proxy }}
        - name: HTTPS_PROXY
          value: {{ .Values.proxy }}
        - name: NO_PROXY
          value: {{ .Values.noProxy }}
{{- end }}
{{- if .Values.systemDefaultRegistry }}
        - name: CATTLE_SYSTEM_DEFAULT_REGISTRY
          value: {{ .Values.systemDefaultRegistry }}
{{- end }}
{{- if .Values.useBundledSystemChart }}
        - name: CATTLE_SYSTEM_CATALOG
          value: bundled
{{- end }}
{{- if .Values.restrictedAdmin }}
        - name: CATTLE_RESTRICTED_DEFAULT_ADMIN
          value: "true"
{{- end}}
{{- if .Values.bootstrapPassword }}
        - name: CATTLE_BOOTSTRAP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: "bootstrap-secret"
              key: "bootstrapPassword"
{{- end }}
{{- if .Values.extraEnv }}
{{ toYaml .Values.extraEnv | indent 8}}
{{- end }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: {{.Values.livenessProbe.initialDelaySeconds | default 60 }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds | default 30 }}
        readinessProbe:
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: {{.Values.readinessProbe.initialDelaySeconds | default  5}}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds | default 30}}
{{- if .Values.startupProbe }}
        startupProbe:
          httpGet:
            path: /healthz
            port: 80
          failureThreshold: {{.Values.startupProbe.failureThreshold | default 1}}
          periodSeconds: {{ .Values.startupProbe.periodSeconds | default 30}}
{{- end }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        volumeMounts:
{{- if gt (int .Values.auditLog.level) 0 }}
        - mountPath: /var/log/auditlog
          name: audit-log
{{- end }}
{{- if eq .Values.auditLog.destination "sidecar" }}
  {{- if gt (int .Values.auditLog.level) 0 }}
      # Make audit logs available for Rancher log collector tools.
      {{- if .Values.busyboxImage }}
      - image: {{ .Values.busyboxImage}}
      {{- else }}
      - image: {{ .Values.auditLog.image.repository }}:{{.Values.auditLog.image.tag}}
      {{- end }}
      {{- if .Values.busyboxImagePullPolicy }}
        imagePullPolicy: {{ .Values.busyboxImagePullPolicy }}
      {{- else }}
        imagePullPolicy: {{ .Values.auditLog.image.pullPolicy }}
      {{- end }}
        name: {{ template "rancher.name" . }}-audit-log
        command: ["tail"]
        args: ["-F", "/var/log/auditlog/rancher-api-audit.log"]
        volumeMounts:
        - mountPath: /var/log/auditlog
          name: audit-log
  {{- end }}
{{- end }}
      volumes:
{{- if gt (int .Values.auditLog.level) 0 }}
  {{- if eq .Values.auditLog.destination "hostPath" }}
      - name: audit-log
        hostPath:
          path: {{ .Values.auditLog.hostPath }}
          type: DirectoryOrCreate
  {{- else }}
      - name: audit-log
        emptyDir: {}
  {{- end }}
{{- end }}
